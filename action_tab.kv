<ActionTab>
    spacing: '8dp'
    padding: ['8dp', 0, '8dp', '8dp']
    MDBoxLayout:
        RecycleView:
            data: app.actions[app.type] if app.actions else []
            scroll_type: ['bars', 'content']
            viewclass: 'ActionBox'
            RecycleBoxLayout:
                id: actions_parent
                default_size: None, '72dp'
                default_size_hint: 1, None
                height: self.minimum_height
                orientation: 'vertical'
                padding: [0, '8dp', '8dp', 0]
                size_hint_y: None
                spacing: '8dp'
    MDBoxLayout:
        orientation: 'vertical'
        spacing: '8dp'
        MDCard:
            id: stages_box
            opacity: 0 if not app.first_run_animation_completed else 1  # Для стартового ништяка
            orientation: 'vertical'
            radius: [0, 0, 6, 6]
            RecycleView:
                id: stages_rv
                data: app.current_action.stages if app.current_action else []
                scroll_type: ['bars', 'content']
                viewclass: 'OneLineQueue'
                RecycleBoxLayout:
                    id: stages_parent
                    default_size: None, '48dp'
                    default_size_hint: 1, None
                    height: self.minimum_height
                    orientation: 'vertical'
                    size_hint_y: None
                    spacing: '8dp'
        MDGridLayout:
            id: buttons
            cols: 1 if len(self.children) < 3 else 2
            spacing: '8dp'
            size_hint_y: None
            height: self.minimum_height
            MDRectangleFlatIconButton:
                opacity: 0 if not app.first_run_animation_completed else 1 # Для стартового ништяка
                on_release: Snackbar(text="Еще не работает:)").open()
                icon: 'calculator-variant-outline'
                text: "Настройки цен"
                size_hint_x: 1
            MDRectangleFlatIconButton:
                id: button_queue
                opacity: 0 if not app.first_run_animation_completed else 1 # Для стартового ништяка
                on_release: Snackbar(text="Еще не работает:)").open()
                icon: 'human-queue' if app.type == "S" else 'format-list-numbered'
                text: "Очередь сделок"
                size_hint_x: 1
            MDRectangleFlatIconButton:
                id: button_blacklist
                opacity: 0 if not app.first_run_animation_completed else 1 # Для стартового ништяка
                on_release: Snackbar(text="Еще не работает:)").open()
                icon: 'playlist-remove'
                text: "Черный список"
                size_hint_x: 1
            MDRectangleFlatIconButton:
                id: button_blacklist
                opacity: 0 if not app.first_run_animation_completed else 1 # Для стартового ништяка
                on_release: Snackbar(text="Еще не работает:)").open()
                icon: 'calendar-month'
                text: "Статистика"
                size_hint_x: 1


<ActionBox>
    padding: ["6dp", "6dp"]
    elevation: 12
    opacity:
        0 if not app.first_run_animation_completed else \
        (self._min_opacity if ((self.only_before_pause and not app.need_pause) \
        or (self.only_start_over and self.completed)) \
        else self._max_opacity)
    style: "outlined"
    line_color: app.theme_cls.primary_dark if root.active else (.2, .2, .2, .8)
    MDBoxLayout:
        orientation: 'vertical'
        MDLabel:
            text: root.name
    MDLabel:
        text: "{}".format(datetime.utcfromtimestamp(root.timer).strftime('%M:%S')) if root.have_timer else ""
        size_hint_x: None
        width: '40dp'
    MDIconButton:
        icon: 'stop' if root.active else 'play'
        theme_text_color: "Custom"
        text_color: app.theme_cls.primary_dark if root.active else app.theme_cls.text_color
        on_press: root.play_pause(not root.active)
        pos_hint: {"center_x": 1, "center_y": .5}


<OneLineQueue@OneLineIconListItem>
    divider: "Inset"
    divider_color:
        app.theme_cls.primary_dark if root.status == 'progress' or root.status == 'error' else (.2, .2, .2, .8)
    IconLeftWidget:
        icon: root.widgets[root.status]
        theme_text_color: "Custom"
        text_color:
            app.theme_cls.primary_dark if root.status == 'progress' or root.status == 'error' \
            else app.theme_cls.text_color